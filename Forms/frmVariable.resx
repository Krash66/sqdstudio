<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/7gAOQWRvYmUAZAAAAAAB//4AAyD/2wBDAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQECAgICAgICAgICAgMDAwMDAwMDAwP/2wBDAQEBAQEBAQIBAQICAgECAgMDAwMDAwMD
        AwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwP/wAARCAA3ADcDAREAAhEBAxEB
        /8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQR
        BRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpT
        VFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLD
        xMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAEC
        AwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMz
        UvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6
        goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn
        6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD+mDxz45+Kv7VvxV1DwR4I1C5XwstzqCaJoiahLpugRaBp
        svkt4h8QtDkXUl0CshMizMjTLDCpyA39zcP8P8H+D3B9LP8AP6UXm7jB1argp1nWmr+xo3+FR1SScU1F
        zm92vzPF4vMOIMweFwrfsLvlje0eVfal3v8APeyNv/hgD4yf9DL8M/8Awc+Kf/mMrg/4mQ4H/wCgXNv/
        AAVh/wD5qNv9UMy/nof+BT/+QD/hgD4yf9DL8M//AAc+Kf8A5jKP+JkOB/8AoFzb/wAFYf8A+ag/1QzL
        +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
        GbhBzi6sqri+X3b8yalsvi5raH//2Q==
</value>
  </data>
</root>